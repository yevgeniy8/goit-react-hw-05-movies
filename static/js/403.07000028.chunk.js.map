{"version":3,"file":"static/js/403.07000028.chunk.js","mappings":"6OAwBA,MAtBA,YAAqC,IAAbA,EAAY,EAAZA,SAQpB,OACI,0BACI,kBAAMC,OAAO,GAAGD,SATH,SAAAE,GACjBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBL,EAASI,EAAKE,SAASC,KAAKC,OAC5BJ,EAAKK,OACR,EAIO,WACI,kBAAOC,KAAK,OAAOH,KAAK,UACxB,mBAAQG,KAAK,SAAb,wBAIf,E,0BCoBD,MA/BA,WACI,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMT,EAAOQ,EAAaE,IAAI,QAkB9B,OAhBAC,EAAAA,EAAAA,YAAU,WACN,GAAKX,EAAL,CAGA,IAAMY,EAAG,mCAAG,qGACaC,EAAAA,EAAAA,IAAmBb,GADhC,OACFc,EADE,OAERR,EAAUQ,EAAOC,SAFT,2CAAH,qDAKTH,GANC,CAOJ,GAAE,CAACZ,KAOA,4BACI,SAAC,EAAD,CAAcP,SAND,SAAAuB,GACjBP,EAAgB,CAAET,KAAMgB,GAC3B,IAMQX,IAAU,SAACY,EAAA,EAAD,CAAYZ,OAAQA,MAG1C,C","sources":["components/SearchMovies/SearchMovies.jsx","page/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction SearchMovies({ onSubmit }) {\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const form = evt.currentTarget;\n        onSubmit(form.elements.name.value);\n        form.reset();\n    };\n\n    return (\n        <div>\n            <form action=\"\" onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"name\" />\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    );\n}\n\nSearchMovies.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import { useEffect, useState } from 'react';\n\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { fetchMoviesByQuery } from 'helpers/fetchApi';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const name = searchParams.get('name');\n\n    useEffect(() => {\n        if (!name) {\n            return;\n        }\n        const api = async () => {\n            const result = await fetchMoviesByQuery(name);\n            setMovies(result.results);\n        };\n\n        api();\n    }, [name]);\n\n    const handleSubmit = query => {\n        setSearchParams({ name: query });\n    };\n\n    return (\n        <div>\n            <SearchMovies onSubmit={handleSubmit} />\n\n            {movies && <MoviesList movies={movies} />}\n        </div>\n    );\n}\n\nexport default Movies;\n"],"names":["onSubmit","action","evt","preventDefault","form","currentTarget","elements","name","value","reset","type","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","api","fetchMoviesByQuery","result","results","query","MoviesList"],"sourceRoot":""}